///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ProductModelSearchCriteriaFilterGroupsFilters {
/*
{
  "field": "color",
  "value": "6",
  "condition_type": "eq"
} 
*/

  String? field;
  String? value;
  String? conditionType;

  ProductModelSearchCriteriaFilterGroupsFilters({
    this.field,
    this.value,
    this.conditionType,
  });
  ProductModelSearchCriteriaFilterGroupsFilters.fromJson(
      Map<String, dynamic> json) {
    field = json['field']?.toString();
    value = json['value']?.toString();
    conditionType = json['condition_type']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['field'] = field;
    data['value'] = value;
    data['condition_type'] = conditionType;
    return data;
  }
}

class ProductModelSearchCriteriaFilterGroups {
/*
{
  "filters": [
    {
      "field": "color",
      "value": "6",
      "condition_type": "eq"
    }
  ]
} 
*/

  List<ProductModelSearchCriteriaFilterGroupsFilters?>? filters;

  ProductModelSearchCriteriaFilterGroups({
    this.filters,
  });
  ProductModelSearchCriteriaFilterGroups.fromJson(Map<String, dynamic> json) {
    if (json['filters'] != null) {
      final v = json['filters'];
      final arr0 = <ProductModelSearchCriteriaFilterGroupsFilters>[];
      v.forEach((v) {
        arr0.add(ProductModelSearchCriteriaFilterGroupsFilters.fromJson(v));
      });
      filters = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (filters != null) {
      final v = filters;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['filters'] = arr0;
    }
    return data;
  }
}

class ProductModelSearchCriteria {
/*
{
  "filter_groups": [
    {
      "filters": [
        {
          "field": "color",
          "value": "6",
          "condition_type": "eq"
        }
      ]
    }
  ]
} 
*/

  List<ProductModelSearchCriteriaFilterGroups?>? filterGroups;

  ProductModelSearchCriteria({
    this.filterGroups,
  });
  ProductModelSearchCriteria.fromJson(Map<String, dynamic> json) {
    if (json['filter_groups'] != null) {
      final v = json['filter_groups'];
      final arr0 = <ProductModelSearchCriteriaFilterGroups>[];
      v.forEach((v) {
        arr0.add(ProductModelSearchCriteriaFilterGroups.fromJson(v));
      });
      filterGroups = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (filterGroups != null) {
      final v = filterGroups;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['filter_groups'] = arr0;
    }
    return data;
  }
}

class ProductModelItemsCustomAttributes {
/*
{
  "attribute_code": "image",
  "value": "/3/3/3348901416405.jpg"
} 
*/

  String? attributeCode;
  String? value;

  ProductModelItemsCustomAttributes({
    this.attributeCode,
    this.value,
  });
  ProductModelItemsCustomAttributes.fromJson(Map<String, dynamic> json) {
    attributeCode = json['attribute_code']?.toString();
    value = json['value']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['attribute_code'] = attributeCode;
    data['value'] = value;
    return data;
  }
}

class ProductModelItemsMediaGalleryEntries {
/*
{
  "id": 210,
  "media_type": "image",
  "label": "",
  "position": 1,
  "disabled": false,
  "types": [
    "image"
  ],
  "file": "/3/3/3348901416405.jpg"
} 
*/

  String? id;
  String? mediaType;
  String? label;
  String? position;
  bool? disabled;
  List<String?>? types;
  String? file;

  ProductModelItemsMediaGalleryEntries({
    this.id,
    this.mediaType,
    this.label,
    this.position,
    this.disabled,
    this.types,
    this.file,
  });
  ProductModelItemsMediaGalleryEntries.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    mediaType = json['media_type']?.toString();
    label = json['label']?.toString();
    position = json['position']?.toString();
    disabled = json['disabled'];
    if (json['types'] != null) {
      final v = json['types'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      types = arr0;
    }
    file = json['file']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['media_type'] = mediaType;
    data['label'] = label;
    data['position'] = position;
    data['disabled'] = disabled;
    if (types != null) {
      final v = types;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['types'] = arr0;
    }
    data['file'] = file;
    return data;
  }
}

class ProductModelItemsExtensionAttributesCategoryLinks {
/*
{
  "position": -45,
  "category_id": "2"
} 
*/

  String? position;
  String? categoryId;

  ProductModelItemsExtensionAttributesCategoryLinks({
    this.position,
    this.categoryId,
  });
  ProductModelItemsExtensionAttributesCategoryLinks.fromJson(
      Map<String, dynamic> json) {
    position = json['position']?.toString();
    categoryId = json['category_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['position'] = position;
    data['category_id'] = categoryId;
    return data;
  }
}

class ProductModelItemsExtensionAttributes {
/*
{
  "website_ids": [
    1
  ],
  "category_links": [
    {
      "position": -45,
      "category_id": "2"
    }
  ]
} 
*/

  List<String?>? websiteIds;
  List<ProductModelItemsExtensionAttributesCategoryLinks?>? categoryLinks;

  ProductModelItemsExtensionAttributes({
    this.websiteIds,
    this.categoryLinks,
  });
  ProductModelItemsExtensionAttributes.fromJson(Map<String, dynamic> json) {
    if (json['website_ids'] != null) {
      final v = json['website_ids'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      websiteIds = arr0;
    }
    if (json['category_links'] != null) {
      final v = json['category_links'];
      final arr0 = <ProductModelItemsExtensionAttributesCategoryLinks>[];
      v.forEach((v) {
        arr0.add(ProductModelItemsExtensionAttributesCategoryLinks.fromJson(v));
      });
      categoryLinks = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (websiteIds != null) {
      final v = websiteIds;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['website_ids'] = arr0;
    }
    if (categoryLinks != null) {
      final v = categoryLinks;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['category_links'] = arr0;
    }
    return data;
  }
}

class ProductModelItems {
/*
{
  "id": 201,
  "sku": "3348901416405",
  "name": "Dior Addict Lip Tattoo-661 Natural Red",
  "attribute_set_id": 4,
  "price": 11.75,
  "status": 1,
  "visibility": 1,
  "type_id": "simple",
  "created_at": "2024-08-07 11:24:13",
  "updated_at": "2024-08-21 14:50:57",
  "extension_attributes": {
    "website_ids": [
      1
    ],
    "category_links": [
      {
        "position": -45,
        "category_id": "2"
      }
    ]
  },
  "media_gallery_entries": [
    {
      "id": 210,
      "media_type": "image",
      "label": "",
      "position": 1,
      "disabled": false,
      "types": [
        "image"
      ],
      "file": "/3/3/3348901416405.jpg"
    }
  ],
  "custom_attributes": [
    {
      "attribute_code": "image",
      "value": "/3/3/3348901416405.jpg"
    }
  ]
} 
*/

  String? id;
  String? sku;
  String? name;
  String? attributeSetId;
  String? price;
  String? status;
  String? visibility;
  String? typeId;
  String? createdAt;
  String? updatedAt;
  ProductModelItemsExtensionAttributes? extensionAttributes;
  List<ProductModelItemsMediaGalleryEntries?>? mediaGalleryEntries;
  List<ProductModelItemsCustomAttributes?>? customAttributes;

  ProductModelItems({
    this.id,
    this.sku,
    this.name,
    this.attributeSetId,
    this.price,
    this.status,
    this.visibility,
    this.typeId,
    this.createdAt,
    this.updatedAt,
    this.extensionAttributes,
    this.mediaGalleryEntries,
    this.customAttributes,
  });
  ProductModelItems.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    sku = json['sku']?.toString();
    name = json['name']?.toString();
    attributeSetId = json['attribute_set_id']?.toString();
    price = json['price']?.toString();
    status = json['status']?.toString();
    visibility = json['visibility']?.toString();
    typeId = json['type_id']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    extensionAttributes = (json['extension_attributes'] != null)
        ? ProductModelItemsExtensionAttributes.fromJson(
            json['extension_attributes'])
        : null;
    if (json['media_gallery_entries'] != null) {
      final v = json['media_gallery_entries'];
      final arr0 = <ProductModelItemsMediaGalleryEntries>[];
      v.forEach((v) {
        arr0.add(ProductModelItemsMediaGalleryEntries.fromJson(v));
      });
      mediaGalleryEntries = arr0;
    }
    if (json['custom_attributes'] != null) {
      final v = json['custom_attributes'];
      final arr0 = <ProductModelItemsCustomAttributes>[];
      v.forEach((v) {
        arr0.add(ProductModelItemsCustomAttributes.fromJson(v));
      });
      customAttributes = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['sku'] = sku;
    data['name'] = name;
    data['attribute_set_id'] = attributeSetId;
    data['price'] = price;
    data['status'] = status;
    data['visibility'] = visibility;
    data['type_id'] = typeId;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    if (extensionAttributes != null) {
      data['extension_attributes'] = extensionAttributes!.toJson();
    }
    if (mediaGalleryEntries != null) {
      final v = mediaGalleryEntries;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['media_gallery_entries'] = arr0;
    }
    if (customAttributes != null) {
      final v = customAttributes;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['custom_attributes'] = arr0;
    }
    return data;
  }
}

class ProductModel {
/*
{
  "items": [
    {
      "id": 201,
      "sku": "3348901416405",
      "name": "Dior Addict Lip Tattoo-661 Natural Red",
      "attribute_set_id": 4,
      "price": 11.75,
      "status": 1,
      "visibility": 1,
      "type_id": "simple",
      "created_at": "2024-08-07 11:24:13",
      "updated_at": "2024-08-21 14:50:57",
      "extension_attributes": {
        "website_ids": [
          1
        ],
        "category_links": [
          {
            "position": -45,
            "category_id": "2"
          }
        ]
      },
      "media_gallery_entries": [
        {
          "id": 210,
          "media_type": "image",
          "label": "",
          "position": 1,
          "disabled": false,
          "types": [
            "image"
          ],
          "file": "/3/3/3348901416405.jpg"
        }
      ],
      "custom_attributes": [
        {
          "attribute_code": "image",
          "value": "/3/3/3348901416405.jpg"
        }
      ]
    }
  ],
  "search_criteria": {
    "filter_groups": [
      {
        "filters": [
          {
            "field": "color",
            "value": "6",
            "condition_type": "eq"
          }
        ]
      }
    ]
  },
  "total_count": 3
} 
*/

  List<ProductModelItems?>? items;
  ProductModelSearchCriteria? searchCriteria;
  String? totalCount;

  ProductModel({
    this.items,
    this.searchCriteria,
    this.totalCount,
  });
  ProductModel.fromJson(Map<String, dynamic> json) {
    if (json['items'] != null) {
      final v = json['items'];
      final arr0 = <ProductModelItems>[];
      v.forEach((v) {
        arr0.add(ProductModelItems.fromJson(v));
      });
      items = arr0;
    }
    searchCriteria = (json['search_criteria'] != null)
        ? ProductModelSearchCriteria.fromJson(json['search_criteria'])
        : null;
    totalCount = json['total_count']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (items != null) {
      final v = items;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['items'] = arr0;
    }
    if (searchCriteria != null) {
      data['search_criteria'] = searchCriteria!.toJson();
    }
    data['total_count'] = totalCount;
    return data;
  }
}
